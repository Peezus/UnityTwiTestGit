using UnityEngine;
using System.Collections;

//------------------------------------------------------------------------------
// シングルトン
//------------------------------------------------------------------------------
public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
{
    //------------------------------------------------------------------
    // インスタンス取得
    //------------------------------------------------------------------
    public static T GetInstance()
    {
        if( m_Instance == null ){
            m_Instance = (T)(GameObject.FindObjectOfType(typeof(T)));
        }
        return m_Instance;
    }
    //------------------------------------------------------------------
    // 初期化
    //------------------------------------------------------------------
    protected abstract void Initialize();
    //------------------------------------------------------------------
    // Awake
    //------------------------------------------------------------------
    private void Awake()
    {
        if( m_Instance != null && m_Instance != (T)this )
        {
            Destroy(gameObject);
            return;
        }

        Initialize();

        DontDestroyOnLoad(gameObject);

        m_Instance = (T)this;
    }

    //------------------------------------------------------------------
    // property
    //------------------------------------------------------------------
    public static T I {
        get{
            return GetInstance();
        }
    }

    //------------------------------------------------------------------
    // member
    //------------------------------------------------------------------
    private static T m_Instance = null;
}
//================================================================================
// End of File
//================================================================================
